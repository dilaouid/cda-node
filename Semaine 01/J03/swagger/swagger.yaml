openapi: 3.0.0
info:
  title: API de mon Blog
  description: Cette API permet de gérer les posts d'un blog.
  version: "1.0.0"
servers:
  - url: http://localhost:1234
paths:
  /:
    get:
      summary: Liste tous les users
      responses:
        '200':
          description: Une liste des users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example:
                id: 1
                nom: Alain
                age: 22
    post:
      summary: Ajouter un nouveau profil User
      requestBody:
        required: true
        description: objet à envoyer en json à l'API
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/UserNoId'
              example:
                nom: Alain
                age: 22
      responses:
        '200':
          description: profil user ajouté
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message200'
              example:
                code: 200
                msg: user ajouté en base
  /{id}:
    get:
      summary: recupérer le profil un user
      parameters:
        - in: path
          name: id
          required: true
          description: id utilisateur
          schema:
            type: string
      responses:
        '200':
          description: profil récupéré
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 1
                nom: Alain
                age: 22
        '404':
          description: profil introuvable  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message404'
              example:
                code: 404
                msg: message d'erreur 404

  /commentaires:
    get:
      responses:
        '200':
          description: lister tous les commentaires
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commentaire'
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commentaire'
# https://swagger.io/docs/specification/about/
components:
  schemas:
    Message200:
      type: object
      properties:
        msg:
          type: string
          description: message de success 200
        code:
          type: number
          description: 200
    Message404:
      type: object
      properties:
        msg:
          type: string
          description: message d'erreur 404
        code:
          type: number
          description: 404
    UserNoId:
      type: object
      properties:
        nom:
          type: string
          description: nom de l'utilisateur
        age:
          type: integer
          description: age de l'utilisateur
    User:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du user
        nom:
          type: string
          description: nom de l'utilisateur
        age:
          type: integer
          description: age de l'utilisateur
    Commentaire:
      type: object
      properties:
        id: 
          type: string
          description: identifiant unique du commentaire
        email:
          type: string
          description: email de l'utilisateur ayant commenté
        message:
          type: string
          description: message avec un maximum de 5000 caractères 